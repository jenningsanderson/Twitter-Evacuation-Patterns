var search_data = {"index":{"searchIndex":["customfunctions","epicgeo","writers","evacuationpath","mongo","object","rgeo","timelinebuilder","timeprocessing","tweet","twitterer","twittererbase","userbehavior","evacuator","shelterinplace","add_tweet()","add_user_cluster_to_kml()","as_epic_kml()","as_geojson()","base_cluster_point()","build_evac_triangle()","cluster_as_point()","clusters()","columns()","csv_array()","date()","during_storm_cluster()","during_storm_tweets()","evacuated?()","find_after_home()","find_after_home()","find_before_home()","find_before_home()","find_temporal_pattern()","get_cell()","get_weighted_poi_from_clusters()","group_cluster_by_days()","group_tweets_by_day()","handle()","home_location_point()","mode()","movement_analysis()","movement_profile()","new()","new()","new()","new()","normalize_distances()","post_initialize()","prev_clustering_stuff()","process_handle()","process_tweets_to_clusters()","read()","sanitized_handle()","score_cluster_pattern()","score_cluster_pattern()","score_temporal_patterns()","score_temporal_patterns()","set_poi()","sheltered_in_place?()","sort_clusters_by_day()","sort_clusters_by_day()","sort_tweets_by_date()","split_tweets_into_time_bins()","storm_location_point()","timeline_to_csv()","tweet_count()","tweet_regularity()","two_days_tweets()","vals_to_csv_array()","week_one_linestring()","week_one_tweets()","readme","shelter_in_place_update"],"longSearchIndex":["customfunctions","epicgeo","epicgeo::writers","evacuationpath","mongo","object","rgeo","timelinebuilder","timeprocessing","tweet","twitterer","twittererbase","userbehavior","userbehavior::evacuator","userbehavior::shelterinplace","twittererbase#add_tweet()","object#add_user_cluster_to_kml()","tweet#as_epic_kml()","tweet#as_geojson()","twitterer#base_cluster_point()","twitterer#build_evac_triangle()","twitterer#cluster_as_point()","twitterer#clusters()","timelinebuilder#columns()","timelinebuilder#csv_array()","tweet#date()","userbehavior#during_storm_cluster()","userbehavior#during_storm_tweets()","userbehavior::evacuator#evacuated?()","object#find_after_home()","timeprocessing#find_after_home()","object#find_before_home()","timeprocessing#find_before_home()","object#find_temporal_pattern()","timelinebuilder#get_cell()","twitterer#get_weighted_poi_from_clusters()","object#group_cluster_by_days()","timeprocessing#group_tweets_by_day()","twittererbase#handle()","evacuationpath#home_location_point()","customfunctions#mode()","twitterer#movement_analysis()","evacuationpath#movement_profile()","evacuationpath::new()","timelinebuilder::new()","tweet::new()","twittererbase::new()","timelinebuilder#normalize_distances()","twittererbase#post_initialize()","twitterer#prev_clustering_stuff()","twittererbase#process_handle()","twitterer#process_tweets_to_clusters()","timelinebuilder#read()","twittererbase#sanitized_handle()","object#score_cluster_pattern()","timeprocessing#score_cluster_pattern()","object#score_temporal_patterns()","timeprocessing#score_temporal_patterns()","twitterer#set_poi()","userbehavior::shelterinplace#sheltered_in_place?()","object#sort_clusters_by_day()","timeprocessing#sort_clusters_by_day()","twittererbase#sort_tweets_by_date()","twitterer#split_tweets_into_time_bins()","evacuationpath#storm_location_point()","timelinebuilder#timeline_to_csv()","twittererbase#tweet_count()","timeprocessing#tweet_regularity()","twitterer#two_days_tweets()","timelinebuilder#vals_to_csv_array()","twitterer#week_one_linestring()","twitterer#week_one_tweets()","",""],"info":[["CustomFunctions","","CustomFunctions.html","","<p>Custom Functions\n<p>A custom modules function for storing useful functions which can be\nincluded when needed …\n"],["EpicGeo","","EpicGeo.html","",""],["EpicGeo::Writers","","EpicGeo/Writers.html","",""],["EvacuationPath","","EvacuationPath.html","","<p>Evacuation Path Visualizer\n<p>Build a movement profile for a user who <em>probably</em> evacuated.\n"],["Mongo","","Mongo.html","",""],["Object","","Object.html","",""],["RGeo","","RGeo.html","",""],["TimeLineBuilder","","TimeLineBuilder.html","","<p>require &#39;matrix&#39;\n"],["TimeProcessing","","TimeProcessing.html","","<p>Temporal Calculation Functions\n"],["Tweet","","Tweet.html","","<p>A Tweet Object.\n"],["Twitterer","","Twitterer.html","","<p>Twitterer Active During Hurricane Sandy\n<p>Inheriting basic Twitter User behavior and attributes from TwittererBase …\n"],["TwittererBase","","TwittererBase.html","","<p>Basic Twitterer Model\n<p>This is the most basic Twitterer.  It strictly relates Users to Tweets\n"],["UserBehavior","","UserBehavior.html","",""],["UserBehavior::Evacuator","","UserBehavior/Evacuator.html","","<p>Functions relevant to evacuation behavior\n<p>TODO: Make this less crude\n"],["UserBehavior::ShelterInPlace","","UserBehavior/ShelterInPlace.html","","<p>Functions relevant to users who sheltered in place\n<p>TODO: Make this less crude\n"],["add_tweet","TwittererBase","TwittererBase.html#method-i-add_tweet","(tweet)","<p>Add a tweet object to this Twitterer&#39;s tweets collection\n"],["add_user_cluster_to_kml","Object","Object.html#method-i-add_user_cluster_to_kml","(user, kml_file)","<p>Lets also write a KML file for visualizing this information\n\n<pre>kml_outfile = KMLAuthor.new(&quot;../exports/#{filename}.kml&quot;) ...</pre>\n"],["as_epic_kml","Tweet","Tweet.html#method-i-as_epic_kml","(style=nil)","<p>To write the tweet to a kml file from epic-geo,\n\n<pre>it must be formatted as follows:</pre>\n"],["as_geojson","Tweet","Tweet.html#method-i-as_geojson","()","<p>Return the tweet as a hash in valid geojson for storing as a complete\nfeature in a GeoJSON file.\n"],["base_cluster_point","Twitterer","Twitterer.html#method-i-base_cluster_point","()",""],["build_evac_triangle","Twitterer","Twitterer.html#method-i-build_evac_triangle","()","<p>The triangle analysis method\n"],["cluster_as_point","Twitterer","Twitterer.html#method-i-cluster_as_point","(cluster)",""],["clusters","Twitterer","Twitterer.html#method-i-clusters","()","<p>Helper functions\n"],["columns","TimeLineBuilder","TimeLineBuilder.html#method-i-columns","()",""],["csv_array","TimeLineBuilder","TimeLineBuilder.html#method-i-csv_array","()",""],["date","Tweet","Tweet.html#method-i-date","()","<p>Corrects for the time zone\n"],["during_storm_cluster","UserBehavior","UserBehavior.html#method-i-during_storm_cluster","(args={})",""],["during_storm_tweets","UserBehavior","UserBehavior.html#method-i-during_storm_tweets","(args ={})","<p>Get a user&#39;s tweets from a specific time range\n"],["evacuated?","UserBehavior::Evacuator","UserBehavior/Evacuator.html#method-i-evacuated-3F","()",""],["find_after_home","Object","Object.html#method-i-find_after_home","(clusters)",""],["find_after_home","TimeProcessing","TimeProcessing.html#method-i-find_after_home","(clusters)",""],["find_before_home","Object","Object.html#method-i-find_before_home","(clusters)",""],["find_before_home","TimeProcessing","TimeProcessing.html#method-i-find_before_home","(clusters)",""],["find_temporal_pattern","Object","Object.html#method-i-find_temporal_pattern","(clusters, t_scores)","<p>This function is a major workhorse and tries at every point to return a\ncop-out value.\n"],["get_cell","TimeLineBuilder","TimeLineBuilder.html#method-i-get_cell","(row, column)","<p>Wrapper on Worksheet[] to handle empty cells easier\n"],["get_weighted_poi_from_clusters","Twitterer","Twitterer.html#method-i-get_weighted_poi_from_clusters","(tweet_clusters)","<p>Find the median point of the densest cluster from a set of clusters\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">This</span> <span class=\"ruby-identifier\">function</span> <span class=\"ruby-identifier\">calls</span> <span class=\"ruby-identifier\">functions</span> <span class=\"ruby-identifier\">from</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["group_cluster_by_days","Object","Object.html#method-i-group_cluster_by_days","(tweets)",""],["group_tweets_by_day","TimeProcessing","TimeProcessing.html#method-i-group_tweets_by_day","(tweets)","<p>Returns a hash with day_of_year as keys and arrays of tweet objects as\nvalues\n"],["handle","TwittererBase","TwittererBase.html#method-i-handle","()","<p>Helper function\n"],["home_location_point","EvacuationPath","EvacuationPath.html#method-i-home_location_point","()","<p>Returns the user&#39;s home location point as an RGEO point\n"],["mode","CustomFunctions","CustomFunctions.html#method-i-mode","(array)","<p>Returns the mode of an array of numbers, used in time processing\n"],["movement_analysis","Twitterer","Twitterer.html#method-i-movement_analysis","()","<p>The new movement analysis – will make calls to the time_processing script.\n"],["movement_profile","EvacuationPath","EvacuationPath.html#method-i-movement_profile","(args={})","<p>Builds a GeoJSON movement profile for the user\n"],["new","EvacuationPath","EvacuationPath.html#method-c-new","(args)",""],["new","TimeLineBuilder","TimeLineBuilder.html#method-c-new","(args)",""],["new","Tweet","Tweet.html#method-c-new","(bson_tweet)","<p>Given a bson_tweet as returned from Mongo (or parsed via JSON), It creates\na (basic) tweet object\n"],["new","TwittererBase","TwittererBase.html#method-c-new","(args)",""],["normalize_distances","TimeLineBuilder","TimeLineBuilder.html#method-i-normalize_distances","()","<p>Iterate through cluster data and normalize based on distance\n"],["post_initialize","TwittererBase","TwittererBase.html#method-i-post_initialize","(args)",""],["prev_clustering_stuff","Twitterer","Twitterer.html#method-i-prev_clustering_stuff","()",""],["process_handle","TwittererBase","TwittererBase.html#method-i-process_handle","()","<p>A very basic handle processing function.  Ideally a user&#39;s first handle\n\n<pre>and last hanle are the same, ...</pre>\n"],["process_tweets_to_clusters","Twitterer","Twitterer.html#method-i-process_tweets_to_clusters","()","<p>—————– Get Clusters from the User&#39;s Tweet Locations ——————-#\n"],["read","TimeLineBuilder","TimeLineBuilder.html#method-i-read","()","<p>Read the entire worksheet\n"],["sanitized_handle","TwittererBase","TwittererBase.html#method-i-sanitized_handle","()","<p>If a user has multiple handles, return just the handle used in their first\ntweet\n"],["score_cluster_pattern","Object","Object.html#method-i-score_cluster_pattern","(clusters, t_scores, before_home_cluster)",""],["score_cluster_pattern","TimeProcessing","TimeProcessing.html#method-i-score_cluster_pattern","(clusters, t_scores, before_home_cluster)","\n<pre># return shelter_zones.reverse!</pre>\n<p>end\n"],["score_temporal_patterns","Object","Object.html#method-i-score_temporal_patterns","(tweets)",""],["score_temporal_patterns","TimeProcessing","TimeProcessing.html#method-i-score_temporal_patterns","(tweets)","<p>Deprecated\n"],["set_poi","Twitterer","Twitterer.html#method-i-set_poi","(type, coords)","<p>The type is either &#39;before, during, or after&#39; coords is an array\n(lon, lat) to be saved…\n"],["sheltered_in_place?","UserBehavior::ShelterInPlace","UserBehavior/ShelterInPlace.html#method-i-sheltered_in_place-3F","()",""],["sort_clusters_by_day","Object","Object.html#method-i-sort_clusters_by_day","(clusters)",""],["sort_clusters_by_day","TimeProcessing","TimeProcessing.html#method-i-sort_clusters_by_day","(clusters)",""],["sort_tweets_by_date","TwittererBase","TwittererBase.html#method-i-sort_tweets_by_date","()","<p>Set &amp; return a user&#39;s tweets to be sorted by the Tweet#created_at\nfunction\n"],["split_tweets_into_time_bins","Twitterer","Twitterer.html#method-i-split_tweets_into_time_bins","(time_bins)","<p>Split the tweets by dates in an array of dates\n"],["storm_location_point","EvacuationPath","EvacuationPath.html#method-i-storm_location_point","()","<p>Returns the shelter location as an RGEO point\n"],["timeline_to_csv","TimeLineBuilder","TimeLineBuilder.html#method-i-timeline_to_csv","(args)",""],["tweet_count","TwittererBase","TwittererBase.html#method-i-tweet_count","()","<p>Returns the number of tweets\n"],["tweet_regularity","TimeProcessing","TimeProcessing.html#method-i-tweet_regularity","(tweets)","<p>Given a list of tweets, return the number of tweets that exist in time bins\nwith &gt; 25% activity\n"],["two_days_tweets","Twitterer","Twitterer.html#method-i-two_days_tweets","()",""],["vals_to_csv_array","TimeLineBuilder","TimeLineBuilder.html#method-i-vals_to_csv_array","(values)","<p>Prepare a row of coded data for a csv export\n"],["week_one_linestring","Twitterer","Twitterer.html#method-i-week_one_linestring","()",""],["week_one_tweets","Twitterer","Twitterer.html#method-i-week_one_tweets","()",""],["README","","README_md.html","","<p>Evacuation &amp; Migration Prediction through Twitter Analysis\n<p>Jennings Anderson, Marina Kogan, Kevin …\n"],["shelter_in_place_update","","wrangling_scripts/shelter_in_place_update.html","",""]]}}