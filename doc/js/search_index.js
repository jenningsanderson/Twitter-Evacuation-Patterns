var search_data = {"index":{"searchIndex":["cluster","mongo","object","tweet","rgeo","twitterer","rgeo","as_epic_kml()","as_point()","build_active_time_bins()","build_evac_triangle()","find_median_point()","full_median_point_json()","full_user_path_json()","get_clusters()","get_most_dense_cluster()","individual_points_json()","individual_tweets_json()","kmeans()","new()","new()","point_as_epic_kml()","process_tweet_points()","recenter!()","set_poi()","split_tweets_into_time_bins()","user_path()","user_points()","userpath_as_epic_kml()","readme","created.rid"],"longSearchIndex":["cluster","mongo","object","tweet","tweet::rgeo","twitterer","twitterer::rgeo","tweet#as_epic_kml()","tweet#as_point()","object#build_active_time_bins()","twitterer#build_evac_triangle()","object#find_median_point()","twitterer#full_median_point_json()","twitterer#full_user_path_json()","object#get_clusters()","object#get_most_dense_cluster()","twitterer#individual_points_json()","twitterer#individual_tweets_json()","object#kmeans()","cluster::new()","tweet::new()","twitterer#point_as_epic_kml()","twitterer#process_tweet_points()","cluster#recenter!()","twitterer#set_poi()","twitterer#split_tweets_into_time_bins()","twitterer#user_path()","twitterer#user_points()","twitterer#userpath_as_epic_kml()","",""],"info":[["Cluster","","Cluster.html","","<p>Cluster class, represents a centroid point along with its associated nearby\npoints\n"],["Mongo","","Mongo.html","",""],["Object","","Object.html","",""],["Tweet","","Tweet.html","",""],["Tweet::RGeo","","Tweet/RGeo.html","",""],["Twitterer","","Twitterer.html","",""],["Twitterer::RGeo","","Twitterer/RGeo.html","",""],["as_epic_kml","Tweet","Tweet.html#method-i-as_epic_kml","(style=nil)","<p>To write the tweet to a kml file from epic-geo,\n\n<pre>it must be formatted like so.</pre>\n"],["as_point","Tweet","Tweet.html#method-i-as_point","()","<p>In order to call the tweet.point instance, it must be defined\n"],["build_active_time_bins","Object","Object.html#method-i-build_active_time_bins","(tweets, dates)","<p>Given an array of Tweet objects and a list of dates, this function\n\n<pre>returns an array of size dates.length-1 ...</pre>\n"],["build_evac_triangle","Twitterer","Twitterer.html#method-i-build_evac_triangle","()","<p>The triangle analysis method\n"],["find_median_point","Object","Object.html#method-i-find_median_point","(points_array)","<p>Algorithm adopted from Andrew Hardin&#39;s C# function.\n\n<pre>Given an array of points, this function will sort ...</pre>\n"],["full_median_point_json","Twitterer","Twitterer.html#method-i-full_median_point_json","()",""],["full_user_path_json","Twitterer","Twitterer.html#method-i-full_user_path_json","()","<p>Return a geojson linestring of a user&#39;s tweet locations\n"],["get_clusters","Object","Object.html#method-i-get_clusters","(tweets, centers=5, iterations=10)","<p>Get clusters via k-means clustering from an array of Tweets\n"],["get_most_dense_cluster","Object","Object.html#method-i-get_most_dense_cluster","(tweet_clusters)","<p>Find the densest cluster from a cluster of tweets, this could be a home?\n\n<pre>--&gt; Should check the timing of ...</pre>\n"],["individual_points_json","Twitterer","Twitterer.html#method-i-individual_points_json","()","\n<pre>--------------------- GeoJSON Functions -------------------------#</pre>\n<p>Returns a geojson MultiPoint object …\n"],["individual_tweets_json","Twitterer","Twitterer.html#method-i-individual_tweets_json","()","<p>Return a geojson Feature Collection of Individual Tweets\n"],["kmeans","Object","Object.html#method-i-kmeans","(tweets, k, iterations=10)","<p>kmeans algorithm\n"],["new","Cluster","Cluster.html#method-c-new","(center)","<p>Constructor with a starting centerpoint\n"],["new","Tweet","Tweet.html#method-c-new","(bson_tweet)","<p>Given a bson_tweet as returned from Mongo (or parsed via JSON),\n\n<pre>It creates a tweet object</pre>\n"],["point_as_epic_kml","Twitterer","Twitterer.html#method-i-point_as_epic_kml","(name, x, y, style=nil)","<p>A helper function to convert a point to epic-KML\n"],["process_tweet_points","Twitterer","Twitterer.html#method-i-process_tweet_points","()","<p>Create rgeo points array for all tweets\n"],["recenter!","Cluster","Cluster.html#method-i-recenter-21","()","<p>Recenters the centroid point and removes all of the associated points\n"],["set_poi","Twitterer","Twitterer.html#method-i-set_poi","(type, coords)","<p>The type is either &#39;before, during, or after&#39; coords is an array\n(lon, lat) to be saved…\n"],["split_tweets_into_time_bins","Twitterer","Twitterer.html#method-i-split_tweets_into_time_bins","(time_bins)","<p>Split the tweets by dates in an array of dates\n"],["user_path","Twitterer","Twitterer.html#method-i-user_path","()","<p>Create LineString of points\n"],["user_points","Twitterer","Twitterer.html#method-i-user_points","()","<p>Just the points as a multi_point geo object\n"],["userpath_as_epic_kml","Twitterer","Twitterer.html#method-i-userpath_as_epic_kml","()","<p>——————— KML Functions ————————-#\n"],["README","","README_md.html","","<p>Evacuation &amp; Migration Prediction through Twitter Analysis\n<p>Jennings Anderson @ Project EPIC\n<p><em>This is</em> …\n"],["created.rid","","doc/created_rid.html","",""]]}}